<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/data/jpa
            http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
">

    <!--进行Spring和SpringDataJPA的配置-->

    <!--1、创建数据库连接池-->
    <!--引入外部文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!--第三⽅jar中的bean定义在xml中-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--2、配置一个JPA中非常重要的对象，entityManagerFactory
            entityManager类似于Mybatis中SqlSession
            entityManagerFactory类似于MyBatis中SqlSessionFactory
    -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <!--配置一些细节......-->

        <!--配置数据源-->
        <property name="dataSource" ref="dataSource"/>
        <!--配置包扫描-->
        <property name="packagesToScan" value="com.lagou.edu.pojo"/>
        <!--指定jpa的具体实现，也就是Hibernate-->
        <property name="persistenceProvider">
            <bean class="org.hibernate.jpa.HibernatePersistenceProvider"></bean>
        </property>
        <!--jpa方言配置, 不同的jpa实现类对于beginTransaction等细节实现起来是不一样的，所以传入JpaDialect实现类-->
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"></bean>
        </property>

        <!--配置具体的provider，hibernate框架的执行细节-->
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <!--定义Hibernate框架的一些细节-->
                <!--
                    配置数据库表是否自动创建
                    因为我们会建立pojo与数据库表之间的映射关系
                    程序启动时，如果数据库表还没有创建，是否要程序给创建一下
                 -->
                <property name="generateDdl" value="false"/>

                <!--
                    指定数据库的类型
                    hibernate本身是个dao层框架，可以支持多种数据库类型的，这里就指定本次使用什么数据库
                -->
                <property name="database" value="MYSQL"/>

                <!--
                    配置数据库方言
                    hibernate可以帮助我们拼接sql语句，但是不同的数据库语法是不同的，所以我们要注入具体的数据库方言
                -->
                <property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect"/>
                <!--是否显示sql
                    操作数据库时，是否打印sql
                -->
                <property name="showSql" value="true"/>
            </bean>
        </property>

    </bean>

    <!--3、引入上面创建的entityManagerFactory
        <jpa:repositories>配置jpa的dao层细节
        base-package：指定dao层所在包
    -->
    <jpa:repositories base-package="com.lagou.edu.dao" entity-manager-factory-ref="entityManagerFactory" transaction-manager-ref="jpaTransactionManager"/>

    <!--4、事务管理器配置
        jdbcTemplate/mybatis 使用的是DataSourceTransactionManager
        jpa规范：JpaTransactionManager
    -->
    <bean id="jpaTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>


    <!--5、声明式事务配置-->
    <!--
        <tx:annotation-driven/>
    -->

    <!--6、配置Spring包扫描-->
    <context:component-scan base-package="com.lagou.edu"/>

</beans>